// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesManagement.CashFlow.Infrastructure.Persistence.Contexts;

#nullable disable

namespace SalesManagement.CashFlow.Infrastructure.Migrations
{
    [DbContext(typeof(CashFlowContext))]
    [Migration("20230116001137_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CashFlow")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesManagement.CashFlow.Domain.Entities.LancamentoBancario", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Categoria");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CriadoEm")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<int>("TipoLancamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("TipoLancamentoId")
                        .HasDatabaseName("IX_LancamentoBancario_TipoLancamentoId");

                    b.ToTable("LancamentoBancario", "CashFlow");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "categoria 01",
                            CriadoEm = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 01",
                            TipoLancamentoId = 1,
                            Valor = 100.0m
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "categoria 02",
                            CriadoEm = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 02",
                            TipoLancamentoId = 1,
                            Valor = 100000.0m
                        },
                        new
                        {
                            Id = 3,
                            Categoria = "categoria 03",
                            CriadoEm = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 03",
                            TipoLancamentoId = 2,
                            Valor = 200000.0m
                        },
                        new
                        {
                            Id = 4,
                            Categoria = "categoria 04",
                            CriadoEm = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 04",
                            TipoLancamentoId = 2,
                            Valor = 100000.0m
                        },
                        new
                        {
                            Id = 5,
                            Categoria = "categoria 05",
                            CriadoEm = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 05",
                            TipoLancamentoId = 1,
                            Valor = 100.0m
                        },
                        new
                        {
                            Id = 6,
                            Categoria = "categoria 06",
                            CriadoEm = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 06",
                            TipoLancamentoId = 1,
                            Valor = 100000.0m
                        },
                        new
                        {
                            Id = 7,
                            Categoria = "categoria 07",
                            CriadoEm = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 07",
                            TipoLancamentoId = 2,
                            Valor = 200000.0m
                        },
                        new
                        {
                            Id = 8,
                            Categoria = "categoria 08",
                            CriadoEm = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "descrição 08",
                            TipoLancamentoId = 2,
                            Valor = 100000.0m
                        });
                });

            modelBuilder.Entity("SalesManagement.CashFlow.Domain.Entities.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Caminho");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NomeArquivo");

                    b.HasKey("Id");

                    b.ToTable("Relatorio", "CashFlow");
                });

            modelBuilder.Entity("SalesManagement.CashFlow.Domain.Entities.TipoLancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CriadoEm")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("TipoLancamento", "CashFlow");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriadoEm = new DateTime(2023, 1, 15, 21, 11, 37, 403, DateTimeKind.Local).AddTicks(137),
                            Nome = "Debit"
                        },
                        new
                        {
                            Id = 2,
                            CriadoEm = new DateTime(2023, 1, 15, 21, 11, 37, 403, DateTimeKind.Local).AddTicks(179),
                            Nome = "Credit"
                        });
                });

            modelBuilder.Entity("SalesManagement.CashFlow.Domain.Entities.LancamentoBancario", b =>
                {
                    b.HasOne("SalesManagement.CashFlow.Domain.Entities.TipoLancamento", "TipoLancamento")
                        .WithOne("LancamentoBancario")
                        .HasForeignKey("SalesManagement.CashFlow.Domain.Entities.LancamentoBancario", "TipoLancamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoLancamento");
                });

            modelBuilder.Entity("SalesManagement.CashFlow.Domain.Entities.TipoLancamento", b =>
                {
                    b.Navigation("LancamentoBancario");
                });
#pragma warning restore 612, 618
        }
    }
}
